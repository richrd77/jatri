// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gangwar-primary: mat.define-palette(mat.$indigo-palette);
$gangwar-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gangwar-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gangwar-theme: mat.define-light-theme(
  (
    color: (
      primary: $gangwar-primary,
      accent: $gangwar-accent,
      warn: $gangwar-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($gangwar-theme);

/* You can add global styles to this file, and also import other style files */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

a {
  text-decoration: none;
  color: inherit;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
}

body {
  min-height: 100vh;
}

:root {
  --color: #97144d;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  background-color: #fafafa;
}

a {
  text-decoration: none;
  color: inherit;
}

header {
  padding: 1em 2em;
  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.3);
  margin-bottom: 10px;
}

header h1 {
  text-transform: capitalize;
  color: var(--color);
}

main {
  min-height: calc(100vh - 4em - 17px);
  padding: 1em;
}

div.in-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

div.container {
  width: 300px;
  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.3);
  padding: 1em;
}

h1 {
  margin-bottom: 1em;
}

form#frm {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1em;
}

a > i {
  margin-right: 10px;
}

div.control {
  position: relative;
  border: 1px solid;
  height: 2em;
}

div.control > label {
  position: absolute;
  padding: 0 10px;
  top: -10px;
  left: 1em;
  font-size: 0.8em;
  background-color: white;
  z-index: 2;
}

div.control > input {
  position: absolute;
  inset: 0;
  outline: none;
  padding: 0 10px;
}

button {
  outline: none;
  padding: 1em 1em;
  position: relative;
  background-color: var(--color);
  border: none;
  color: white;
  width: 100%;
  margin-top: 1em;
}

button.progress {
  pointer-events: none;
}

button > span.msg {
  transition: opacity 0.6s;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

button.progress > span.msg {
  opacity: 0;
}

button.progress > svg {
  opacity: 1;
}

button > svg {
  transition: opacity 0.6s;
  z-index: 2;
  position: absolute;
  top: 50%;
  left: 50%;
  margin: 0 auto;
  width: 1em;
  height: 1em;
  transform: translate(-50%, -50%);
  pointer-events: none;
  opacity: 0;
}

button > svg > path {
  stroke: white;
  stroke-linecap: round;
  -webkit-animation: dash 1.1s ease-in-out infinite;
  animation: dash 1.1s ease-in-out infinite;
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 160;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 80, 160;
    stroke-dashoffset: -32;
  }

  100% {
    stroke-dasharray: 80, 160;
    stroke-dashoffset: -124;
  }
}
